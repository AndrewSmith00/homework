#include <iostream>
#include <stdio.h>

using namespace std;

//Кузнецов Андрей
//Скалярное произведение строки и столбца, на которых находится последний минимальный элемент

int** CreateMatrix(int n, int m);
int** FillMatrix(int n, int m);
void PrintMatrix(int** arr, int n, int m);
void FindMin(int** matr, int n, int &k, int &l);
int GetColumnSum(int** matr, int l, int n);
int mult(int** matr, int n);

int main()
{
	int n = 3;

	int** matr = FillMatrix(n, n);

	PrintMatrix(matr, n, n);

	printf("%d",mult(matr, n));
}

int** CreateMatrix(int n, int m)
{
	int** arr = new int* [n];

	for (int i = 0; i < n; i++)
	{
		arr[i] = new int[m];
	}

	return arr;
}

int** FillMatrix(int n, int m)
{
	int** arr = CreateMatrix(n, m);

	for (int i = 0; i < n; i++)
	{
		printf("%d string:\n", i + 1);
		for (int j = 0; j < m; j++)
			scanf_s("%d", &arr[i][j]);
	}
	return arr;
}

void PrintMatrix(int** arr, int n, int m)
{
	for (int i = 0; i < n; i++)
	{
		printf("\n");
		for (int j = 0; j < m; j++)
			printf("%d\t", arr[i][j]);
		printf("\n");
	}
	printf("\n");
}

void FindMin(int** matr, int n, int &k, int &l)
{
	int min = INT_MAX;

	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			if (matr[i][j] <= min)
			{
				min = matr[i][j];
				k = i;
				l = j;
			}
}

int GetColumnSum(int** matr, int l, int n)
{
	int sum = 0;
	for (int i = 0; i < n; i++)
		sum += matr[i][l];
	return sum;
}

int GetRowSum(int** matr, int k, int n)
{
	int sum = 0;
	for (int j = 0; j < n; j++)
		sum += matr[k][j];
	return sum;
}

int mult(int** matr, int n)
{
	int mult = 1, k, l, columnSum, rowSum;
	FindMin(matr, n, k, l);

	columnSum = GetColumnSum(matr, l, n);
	rowSum = GetRowSum(matr, k, n);

	mult = columnSum * rowSum;

	return mult;
}
