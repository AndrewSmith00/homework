#include <iostream>
#include <stdio.h>

using namespace std;

//Кузнецов Андрей
//Количество строк и столбцов матрицы, в которых элементы попарно различны

int** CreateMatrix(int n, int m);
int** FillMatrix(int n, int m);
int DifferentRowsAndColumn(int** matr, int n, int m);
bool RowIsDifferent(int* row, int m);
bool ColumnIsDifferent(int** matr, int column, int n);

int main()
{
	int n = 2, m = 2, res;

	int** arr = FillMatrix(n, m);

	printf("\n%d", DifferentRowsAndColumn(arr, n, m));
}

bool RowIsDifferent(int* row, int m)
{
	bool isDifferent = true;
	for (int i = 0; i < m - 1; i++)
	{
		for (int j = i + 1; j < m; j++)
		{
			if (row[j] == row[i])
			{
				isDifferent = false;
			}
		}
	}
	return isDifferent;
}

bool ColumnIsDifferent(int** matr, int column, int n)
{
	bool isDifferent = true;
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			if (matr[i][column] == matr[j][column])
			{
				isDifferent = false;
			}
		}
	}
	return isDifferent;
}

int DifferentRowsAndColumn(int** matr, int n, int m)
{
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		if (RowIsDifferent(matr[i], m))
			count++;
	}
	for (int j = 0; j < m; j++)
	{
		if (ColumnIsDifferent(matr, j, n))
			count++;
	}
	return count;
}

int** CreateMatrix(int n, int m)
{
	int** arr = new int* [n];

	for (int i = 0; i < n; i++)
	{
		arr[i] = new int[m];
	}

	return arr;
}

int** FillMatrix(int n, int m)
{
	int** arr = CreateMatrix(n, m);

	for (int i = 0; i < n; i++)
	{
		printf("%d string:\n", i + 1);
		for (int j = 0; j < m; j++)
			scanf_s("%d", &arr[i][j]);
	}
	return arr;
}
